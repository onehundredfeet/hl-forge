/*
* Copyright (c) 2017-2022 The Forge Interactive Inc.
*
* This file is part of The-Forge
* (see https://github.com/ConfettiFX/The-Forge).
*
* Licensed to the Apache Software Foundation (ASF) under one
* or more contributor license agreements.  See the NOTICE file
* distributed with this work for additional information
* regarding copyright ownership.  The ASF licenses this file
* to you under the Apache License, Version 2.0 (the
* "License"); you may not use this file except in compliance
* with the License.  You may obtain a copy of the License at
*
*   http://www.apache.org/licenses/LICENSE-2.0
*
* Unless required by applicable law or agreed to in writing,
* software distributed under the License is distributed on an
* "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
* KIND, either express or implied.  See the License for the
* specific language governing permissions and limitations
* under the License.
*/

RES(RWTex2D(float4), Source, UPDATE_FREQ_PER_DRAW, u0, binding = 1);
RES(RWTex2D(float4), Destination, UPDATE_FREQ_PER_DRAW, u1, binding = 2);

PUSH_CONSTANT(RootConstant, b0)
{
	DATA(uint2, MipSize, None);
};

NUM_THREADS(16,  16,  1)
void CS_MAIN( SV_DispatchThreadID(uint3) id) 
{    
	INIT_MAIN;
	if (id.x < Get(MipSize).x && id.y < Get(MipSize).y)
	{
		float4 color = float4(0.0f, 0.0f, 0.0f, 0.0f);
		UNROLL for (int x = 0; x < 2; ++x)
		{
			UNROLL for (int y = 0; y < 2; ++y) {
				color += LoadRWTex2D(Get(Source), id.xy * 2 + uint2(x, y)).xyzw;
			}
		}
		color *= 0.25f;
		
		Write2D(Get(Destination), id.xy, color);
	}
	RETURN();
}
